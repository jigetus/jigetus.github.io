{"version":3,"sources":["Components/Bg.js","Components/Hello.js","App.js","index.js"],"names":["getRandomIntInclusive","min","max","Math","ceil","floor","random","Bg","props","useState","size","setSize","useLayoutEffect","updateSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","width","active1","noactive","x","round","y","cells","i","j","push","getIndexes","id","match","parseInt","setInterval","t","n","document","getElementById","style","color","map","el","height","className","onMouseEnter","ev","target","mouseEnterHandler","onMouseLeave","mouseLeaveHandler","Hello","to","tabIndex","App","path","exact","ReactDOM","render"],"mappings":"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","file":"static/js/main.0af1b043.chunk.js","sourcesContent":["import React, { useLayoutEffect, useState } from \"react\";\r\n\r\nfunction useWindowSize() {\r\n  const [size, setSize] = useState([0, 0]);\r\n  useLayoutEffect(() => {\r\n    function updateSize() {\r\n      setSize([window.innerWidth, window.innerHeight]);\r\n    }\r\n    window.addEventListener(\"resize\", updateSize);\r\n    updateSize();\r\n    return () => window.removeEventListener(\"resize\", updateSize);\r\n  }, []);\r\n  return size;\r\n}\r\nfunction getRandomIntInclusive(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1)) + min; //Максимум и минимум включаются\r\n}\r\n\r\nconst Bg = (props) => {\r\n  const [width, height] = useWindowSize();\r\n  //pseudorandom function\r\n  const getBit = () => Math.round(Math.random());\r\n  //color constants\r\n  const active1 = \"magenta\";\r\n  const active2 = \"#ff00ff73\";\r\n  const noactive = \"#3a405734\";\r\n  //create matrix\r\n  const cellSize = 50;\r\n  const x = Math.round(window.innerWidth / (cellSize + 1));\r\n  const y = Math.round(window.innerHeight / (cellSize + 1));\r\n  const cells = [];\r\n  for (let i = 0; i < y; i++) {\r\n    for (let j = 0; j < x; j++) {\r\n      cells.push({ i, j });\r\n    }\r\n  }\r\n  //get i and j by id\r\n  const getIndexes = (id) => {\r\n    const match = id.match(/\\w+/g);\r\n    return { i: parseInt(match[0]), j: parseInt(match[1]) };\r\n  };\r\n  // mobile animation\r\n  if (width <= 420 && width !== 0) {\r\n    setInterval(() => {\r\n      for (let t = 0; t < y; t++) {\r\n        for (let n = 0; n < x; n++) {\r\n          document.getElementById(`${t}.${n}`).style.color = noactive;\r\n        }\r\n      }\r\n      let i = getRandomIntInclusive(0, y - 1);\r\n      let j = getRandomIntInclusive(0, x - 1);\r\n\r\n      document.getElementById(`${i}.${j}`).style.color = active1;\r\n    }, 700);\r\n  }\r\n  //event handlers\r\n  const mouseEnterHandler = (ev) => {\r\n    const el = ev.target;\r\n    const { i, j } = getIndexes(el.id);\r\n    if (i >= 1 && j >= 1 && i <= y - 2 && j <= x - 2) {\r\n      if (i >= 2 && j >= 2 && i <= y - 3 && j <= x - 3) {\r\n        //Условие второго радиуса\r\n        for (let x = i - 2; x <= i + 2; x++) {\r\n          for (let y = j - 2; y <= j + 2; y++) {\r\n            document.getElementById(`${x}.${y}`).style.color = active2;\r\n          }\r\n        }\r\n      }\r\n      //Условие первого радиуса\r\n      for (let x = i - 1; x <= i + 1; x++) {\r\n        for (let y = j - 1; y <= j + 1; y++) {\r\n          document.getElementById(`${x}.${y}`).style.color = active1;\r\n        }\r\n      }\r\n    } else {\r\n      //обработка углов\r\n      el.style.color = active1;\r\n    }\r\n  };\r\n  const mouseLeaveHandler = (ev) => {\r\n    const el = ev.target;\r\n    const { i, j } = getIndexes(el.id);\r\n    if (i >= 1 && j >= 1 && i <= y - 2 && j <= x - 2) {\r\n      if (i >= 2 && j >= 2 && i <= y - 3 && j <= x - 3) {\r\n        //Условие второго радиуса\r\n        for (let x = i - 2; x <= i + 2; x++) {\r\n          for (let y = j - 2; y <= j + 2; y++) {\r\n            document.getElementById(`${x}.${y}`).style.color = noactive;\r\n          }\r\n        }\r\n      }\r\n      for (let x = i - 1; x <= i + 1; x++) {\r\n        for (let y = j - 1; y <= j + 1; y++) {\r\n          document.getElementById(`${x}.${y}`).style.color = noactive;\r\n        }\r\n      }\r\n    } else {\r\n      //обработка углов\r\n      el.style.color = noactive;\r\n    }\r\n  };\r\n  return (\r\n    <div id=\"bg\">\r\n      {cells.map((el) => (\r\n        <div\r\n          id={`${el.i}.${el.j}`}\r\n          key={`${el.i}.${el.j}`}\r\n          style={{ width: cellSize, height: cellSize }}\r\n          className=\"cell\"\r\n          onMouseEnter={(ev) => (width > 420 ? mouseEnterHandler(ev) : null)}\r\n          onMouseLeave={(ev) => (width > 420 ? mouseLeaveHandler(ev) : null)}\r\n        >\r\n          {getBit()}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\nexport default Bg;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Hello = (props) => (\r\n  <div className=\"hello\">\r\n    Привет, меня зовут Алексей Данилов.\r\n    <br />\r\n    ---------------------\r\n    <br /> Я - <span className=\"spec\">full-stack web developer</span> из Москвы.\r\n    <br></br>\r\n    <br />\r\n    <NavLink to=\"/projects\">\r\n      <div id=\"btn\" tabIndex=\"1\">\r\n        <span className=\"noselect\">Посмотреть мои работы</span>\r\n        <div id=\"circle\"></div>\r\n      </div>\r\n    </NavLink>\r\n  </div>\r\n);\r\nexport default Hello;\r\n","import React from \"react\";\nimport \"./styles/index.css\";\nimport Bg from \"./Components/Bg\";\nimport Hello from \"./Components/Hello\";\nimport { Switch, Route } from \"react-router-dom\";\n\nconst App = (props) => {\n  return (\n    <>\n      <Bg />\n      <Switch>\n        <Route path=\"/\" exact>\n          <Hello />\n        </Route>\n        <Route path=\"/projects\">{() => <div>Projects</div>}</Route>\n      </Switch>\n    </>\n  );\n};\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { HashRouter } from \"react-router-dom\";\n\n// import reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals(console.log);\n"],"sourceRoot":""}