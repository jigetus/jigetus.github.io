{"version":3,"sources":["Components/Bg.js","App.js","index.js"],"names":["Bg","props","useState","size","setSize","useLayoutEffect","updateSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","active1","noactive","x","Math","round","y","cells","console","log","i","j","push","getIndexes","id","match","parseInt","map","el","style","width","height","className","onMouseEnter","ev","target","document","getElementById","color","mouseEnterHandler","onMouseLeave","mouseLeaveHandler","onClick","error","random","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.06078848.chunk.js","sourcesContent":["import React, { useLayoutEffect, useState } from \"react\";\r\n\r\nfunction useWindowSize() {\r\n  const [size, setSize] = useState([0, 0]);\r\n  useLayoutEffect(() => {\r\n    function updateSize() {\r\n      setSize([window.innerWidth, window.innerHeight]);\r\n    }\r\n    window.addEventListener(\"resize\", updateSize);\r\n    updateSize();\r\n    return () => window.removeEventListener(\"resize\", updateSize);\r\n  }, []);\r\n  return size;\r\n}\r\n\r\nconst Bg = (props) => {\r\n  const [width, height] = useWindowSize();\r\n  //pseudorandom function\r\n  const getBit = () => Math.round(Math.random());\r\n  //color constants\r\n  const active1 = \"magenta\";\r\n  const active2 = \"#ff00ff73\";\r\n  const noactive = \"#3a405734\";\r\n  //create matrix\r\n  const cellSize = 50;\r\n  const x = Math.round(window.innerWidth / (cellSize + 1));\r\n  const y = Math.round(window.innerHeight / (cellSize + 1));\r\n  const cells = [];\r\n  console.log(\"Current matrix:\", x, y);\r\n  for (let i = 0; i < y; i++) {\r\n    for (let j = 0; j < x; j++) {\r\n      cells.push({ i, j });\r\n    }\r\n  }\r\n  //get i and j by id\r\n  const getIndexes = (id) => {\r\n    const match = id.match(/\\w+/g);\r\n    return { i: parseInt(match[0]), j: parseInt(match[1]) };\r\n  };\r\n  //event handlers\r\n  const mouseEnterHandler = (ev) => {\r\n    const el = ev.target;\r\n    const { i, j } = getIndexes(el.id);\r\n    if (i >= 1 && j >= 1 && i <= y - 2 && j <= x - 2) {\r\n      if (i >= 2 && j >= 2 && i <= y - 3 && j <= x - 3) {\r\n        //Условие второго радиуса\r\n        for (let x = i - 2; x <= i + 2; x++) {\r\n          for (let y = j - 2; y <= j + 2; y++) {\r\n            document.getElementById(`${x}.${y}`).style.color = active2;\r\n          }\r\n        }\r\n      }\r\n      //Условие первого радиуса\r\n      for (let x = i - 1; x <= i + 1; x++) {\r\n        for (let y = j - 1; y <= j + 1; y++) {\r\n          document.getElementById(`${x}.${y}`).style.color = active1;\r\n        }\r\n      }\r\n    } else {\r\n      //обработка углов\r\n      el.style.color = active1;\r\n    }\r\n  };\r\n  const mouseLeaveHandler = (ev) => {\r\n    const el = ev.target;\r\n    const { i, j } = getIndexes(el.id);\r\n    if (i >= 1 && j >= 1 && i <= y - 2 && j <= x - 2) {\r\n      if (i >= 2 && j >= 2 && i <= y - 3 && j <= x - 3) {\r\n        //Условие второго радиуса\r\n        for (let x = i - 2; x <= i + 2; x++) {\r\n          for (let y = j - 2; y <= j + 2; y++) {\r\n            document.getElementById(`${x}.${y}`).style.color = noactive;\r\n          }\r\n        }\r\n      }\r\n      for (let x = i - 1; x <= i + 1; x++) {\r\n        for (let y = j - 1; y <= j + 1; y++) {\r\n          document.getElementById(`${x}.${y}`).style.color = noactive;\r\n        }\r\n      }\r\n    } else {\r\n      //обработка углов\r\n      el.style.color = noactive;\r\n    }\r\n  };\r\n  return (\r\n    <div id=\"bg\">\r\n      {cells.map((el) => (\r\n        <div\r\n          id={`${el.i}.${el.j}`}\r\n          key={`${el.i}.${el.j}`}\r\n          style={{ width: cellSize, height: cellSize }}\r\n          className=\"cell\"\r\n          onMouseEnter={(ev) => mouseEnterHandler(ev)}\r\n          onMouseLeave={(ev) => mouseLeaveHandler(ev)}\r\n          onClick={(ev) => console.error(ev.target.id)}\r\n        >\r\n          {getBit()}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\nexport default Bg;\r\n","import React from \"react\";\nimport \"./styles/index.css\";\nimport Bg from \"./Components/Bg\";\n\nconst App = (props) => {\n  return (\n    <>\n      <Bg />\n      <div className=\"test\" />\n      {/* <div>Hello world</div> */}\n    </>\n  );\n};\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n// import reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals(console.log);\n"],"sourceRoot":""}